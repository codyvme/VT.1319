# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design Trident 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section

[include mainsail.cfg]
[include stealthburner_leds.cfg]
[include KAMP_Settings.cfg]

[exclude_object]

[printer]
kinematics: corexy
max_velocity: 300 
max_accel: 5000      
max_z_velocity: 10
max_z_accel: 350
square_corner_velocity: 5.0

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_200017001950315939343520-if00
restart_method: command

[mcu sb2040]
canbus_uuid: d0a975846533

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: sb2040:gpio1
spi_software_sclk_pin: sb2040:gpio0
spi_software_mosi_pin: sb2040:gpio3
spi_software_miso_pin: sb2040:gpio2

[resonance_tester]
accel_chip: adxl345
probe_points:
    175, 175, 20

[input_shaper]
shaper_freq_x: 51.4
shaper_type_x: mzv
shaper_freq_y: 36.8
shaper_type_y: mzv

[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
# number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
# keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
# timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
# measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
# max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
# dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
#endstop_pin: tmc2209_stepper_x:virtual_endstop
endstop_pin: sb2040:gpio29
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 50
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: true
run_current: 1.0
#diag_pin: ^PG6
#driver_SGTHRS: 60

[autotune_tmc stepper_x]
motor: omc-17hs19-2004s1

##  A Stepper - Right
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
#endstop_pin: tmc2209_stepper_y:virtual_endstop
endstop_pin: PG11
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 50
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: true
run_current: 1.0
#diag_pin: ^PG9
#driver_SGTHRS: 50

[autotune_tmc stepper_y]
motor: omc-17hs19-2004s1
 
#####################################################################
#   Z Stepper Settings
#####################################################################

##  Z0 Stepper - Front Left
[stepper_z]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
rotation_distance: 4
microsteps: 32
#endstop_pin: PG10
endstop_pin: probe:z_virtual_endstop
position_max: 250
position_min: -10
homing_speed: 8
second_homing_speed: 7
homing_retract_dist: 5

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: true
run_current: 0.6

[autotune_tmc stepper_z]
motor: ldo-42sth40-1684l300e

##  Z1 Stepper - Rear Center
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 4
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: true
run_current: 0.6

[autotune_tmc stepper_z1]
motor: ldo-42sth40-1684l300e

##  Z2 Stepper - Front Right
[stepper_z2]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
rotation_distance: 4
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: true
run_current: 0.6

[autotune_tmc stepper_z2]
motor: ldo-42sth40-1684l300e

#####################################################################
#   Extruder
#####################################################################

[extruder]
step_pin: sb2040:gpio9
dir_pin: !sb2040:gpio10
enable_pin: !sb2040:gpio7
rotation_distance: 47.088
gear_ratio: 9:1
microsteps: 16
max_extrude_cross_section: 5
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: sb2040:gpio6
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: sb2040:gpio27 
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 10
pressure_advance: 0.0296
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721

[tmc2209 extruder]
uart_pin: sb2040:gpio8
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 999999

#[autotune_tmc extruder]
#motor: ldo-36sth20-1004ahg

[firmware_retraction]
retract_length: 0.5
retract_speed: 35
unretract_extra_length: 0
unretract_speed: 10

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
heater_pin: PA3
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF3
##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
#max_power: 0.55
max_power: 0.85
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################

[probe]
pin: ^!sb2040:gpio28
x_offset: 0
y_offset: 0
#z_offset: 0
speed: 5.0
samples: 2
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.05
samples_tolerance_retries: 3
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

[safe_z_home]
home_xy_position: 175, 175
speed: 200
z_hop: 15
z_hop_speed: 7

[bed_mesh]
speed: 250
mesh_min: 30,30
mesh_max: 320,320
zero_reference_position: 175, 175
horizontal_move_z: 5
probe_count: 5,5
algorithm: bicubic

#####################################################################
#   Fan Control
#####################################################################

[fan]
pin: sb2040:gpio13

[heater_fan hotend_fan]
pin: sb2040:gpio14
heater: extruder
heater_temp: 50.0
fan_speed: 0.9

[controller_fan controller_fan]
pin: PD12
stepper: stepper_x, stepper_y, stepper_z

[controller_fan deck_exhaust]
pin: PA8
max_power: 0.3
stepper: stepper_x, stepper_y, stepper_z
heater: heater_bed

[controller_fan deck_intake]
pin: PE5
max_power: 0.3
stepper: stepper_x, stepper_y, stepper_z
heater: heater_bed

#[temperature_fan chamber]
#pin: PD15
#max_power: 0.1
#shutdown_speed: 0
#sensor_type: ATC Semitec 104GT-2
#sensor_pin: PF5
#min_temp: 0
#max_temp: 60
#target_temp: 30
#control: watermark
#gcode_id: C

#####################################################################
#   Temperature Sensors
#####################################################################
#[temperature_sensor chamber]
#sensor_type: ATC Semitec 104GT-2
#sensor_pin: PF5

[temperature_sensor Raspberry_Pi]
sensor_type: temperature_host

[temperature_sensor Octopus]
sensor_type: temperature_mcu

[temperature_sensor SB2040]
sensor_type: temperature_mcu
sensor_mcu: sb2040
min_temp: 0
max_temp: 105

[temperature_sensor Chamber]
sensor_type: ATC Semitec 104GT-2
sensor_pin = sb2040:gpio26
min_temp: 0
max_temp: 200      

#####################################################################
#   LED Control
#####################################################################

[output_pin daylight]
pin: PB10
pwm: True
cycle_time: 0.01
value: 0.5

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[z_tilt]
z_positions:
   -50, 18
   175, 398
   400, 18
points:
   30, 5
   175, 295
   320, 5
speed: 300
horizontal_move_z: 20
retries: 5
retry_tolerance: 0.0075

#####################################################################
#   Macros
#####################################################################

[gcode_macro PRINT_START]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}

    # Reset extruder
    G92 E0

    # Start bed heating
    STATUS_HEATING
    M140 S{BED_TEMP}

    # Wait for bed to reach temp before continuing
    M190 S{BED_TEMP}

    # Home printer if not homed
    {% if "xyz" not in printer.toolhead.homed_axes %}
        STATUS_HOMING
        G28
    {% endif %}

    # Z Tilt
    Z_TILT_ADJUST

    # Start hotend heating
    M104 S{EXTRUDER_TEMP}

    # Bed level
    BED_MESH_CLEAR
    STATUS_MESHING
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE LOAD=default

    # Wait for extruder to reach temp continuing
    STATUS_HEATING
    M109 S{EXTRUDER_TEMP}

    # Purge
    STATUS_PRINTING
    VORON_PURGE   

[gcode_macro PRINT_END]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0

    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-10 F300

    # Raise nozzle by 10mm
    G1 Z10 F350
    G90

    # Disable steppers
    M84

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 37.409
#*# pid_ki = 5.090
#*# pid_kd = 68.739
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 36.890
#*# pid_ki = 1.051
#*# pid_kd = 323.709
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.019335, -0.052773, -0.037148, -0.041835
#*# 	  -0.003085, -0.002460, 0.003165, 0.005352
#*# 	  -0.014960, -0.009648, -0.005273, 0.000665
#*# 	  -0.010273, -0.018085, -0.029960, -0.006835
#*# x_count = 4
#*# y_count = 4
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 100.72
#*# max_x = 249.28
#*# min_y = 100.72
#*# max_y = 249.28000000000003
#*#
#*# [probe]
#*# z_offset = -0.740
